Template: backup-manager/backup-repository
Type: string
Default: /var/archives
_Description: Archives location:
 Please enter the name of the directory where backup-manager will
 store the generated archives.
 .
 The size of archives may be rather important so you should store them
 on a disk with enough available space.

Template: backup-manager/filetype
Type: select
Choices: tar, tar.gz, tar.bz2, tar.lz, zip, dar
Default: tar.gz
_Description: Archives storage format:

Template: backup-manager/dump_symlinks
Type: boolean
Default: false
_Description: Follow symlinks?
 The tar, tar.gz and tar.bz2 filetypes may dereference the symlinks in
 generated archives.
 .
 Enabling this feature will dump the files pointed by symlinks and
 is likely to generate huge archives.

Template: backup-manager/blacklist
Type: string
Default: /var/archives
_Description: Directories to skip in archives:
 Please enter a space-separated list of directories which should not be
 archived.

Template: backup-manager/name-format
Type: select
__Choices: long, short
Default: long
_Description: Archives name format:
 Files generated by backup-manager may use different file naming
 conventions.
 .
 The long format is "host-full-path-to-directory.tar.gz" while the short
 format only uses the last directory name. For instance, /home/me
 would be named me.tar.gz.

Template: backup-manager/time-to-live
Type: string
Default: 5
_Description: Age of kept archives (days):
 Please choose the number of days backup-manager will keep the files
 before purging them. Combining several directories and a large number of
 days for keeping them may lead to huge archives.

Template: backup-manager/directories
Type: string
Default: /etc /home
_Description: Directories to backup:
 Please enter a space-separated list of all the directories you want
 to backup.
 .
 You should rather enter several subdirectories instead of the
 parent in order to have more pertinent files in your backup repository.
 .
 For instance, "/home/user1 /home/user2 /home/user3" is more appropriate
 than "/home" alone.

Template: backup-manager/burning-enabled
Type: boolean
Default: false
_Description: Enable automatic burning?
 Archives may be burnt on a CDR/CDRW/DVD media.
 .
 Using this feature requires a writable media to be present at the running
 time.

Template: backup-manager/burning-device
Type: string
Default: /dev/cdrom
_Description: Device to use for burning data:

Template: backup-manager/burning-maxsize
Type: string
Default: 650
_Description: Maximum size of your media (MB):

Template: backup-manager/burning-method
Type: select
__Choices: CDRW, CDR, DVD, DVD-RW
Default: CDRW
_Description: Burning method:
 When burning data, backup-manager will try to burn the whole archives
 repository. If it does not fit in the media, it will try to burn only the
 daily generated archives.
 .
 The CDRW/DVD-RW methods will first blank the media and then burn the data.
 .
 The CDR/DVD method will only burn the data, assuming that the media is empty
 (or that the disc does not need formatting, like DVD+RW).

Template: backup-manager/want_to_upload
Type: boolean
Default: false
_Description: Enable backup-manager's uploading system?
 Archives may be uploaded to remote hosts using ftp or ssh.
 .
 Using this feature requires valid ftp or ssh account on remote hosts.

Template: backup-manager/transfert_mode
Type: select
Choices: scp, ftp
Default: scp
_Description: Transfer mode to use:
 The "ftp" transfer mode requires a valid FTP account on remote hosts.
 .
 The "scp" mode requires a valid SSH account on remote hosts.
 SSH Key authentication is used to establish the connection.

Template: backup-manager/upload-hosts
Type: string
_Description: Remote hosts list:
 Please enter a space-separated list of hosts (IP or FQDN) where archives will
 be uploaded.

Template: backup-manager/upload-user-scp
Type: string
Default: bmngr
_Description: SSH user's login:
 For the scp transfer mode to be possible, a SSH account will be used. The SSH login
 to use is required as well as the path to the private key.
 .
 Remote hosts must have the user's public key listed in their authorized_keys files
 (see ssh-keygen(1) for details).

Template: backup-manager/upload-user-ftp
Type: string
_Description: FTP user's login:
 Please enter the FTP user to use for uploading files to remote hosts.

Template: backup-manager/upload-key
Type: string
_Description: SSH private key file:
 Despite of the ftp transfer mode, ssh doesn't require a password. The
 authentication is based on the SSH key.
 .
 Don't forget to add the user's public key to the remote host's
 authorized_keys file (see ssh-keygen(1) for details about ssh key
 authentication).

Template: backup-manager/upload-passwd
Type: password
_Description: FTP user's password:
 Enter the password of the FTP user to use for uploading files to remote
 hosts.

Template: backup-manager/upload-dir
Type: string
Default: /var/archives/uploads
_Description: Remote host's repository:
 Please enter where - on the remote hosts - archives should be stored.
 .
 If backup-manager is installed on those hosts, it is recommended to use a
 subdirectory of its archive repository so that even uploaded archives will be purged
 when needed.

Template: backup-manager/cron_frequency
Type: select
__Choices: never, daily, weekly, monthly
Default: never
_Description: CRON frequency:
 Although backup-manager is designed to make daily archives, it can be run
 less frequently, like once a week or even once a month.
 .
 Note that you can also choose not to run backup-manager at all with CRON.

Template: backup-manager/repo_user
Type: string
Default: root
_Description: Owner user of the repository:
 For security reason, the repository where archives will be stored is accessible
 by a specific user.
 .
 The repository and archives inside will be readable and writeable by this user.

Template: backup-manager/repo_group
Type: string
Default: root
_Description: Owner group of the repository:
 For security reason, the repository where archives will be stored is accessible
 by a specific group.
 .
 The repository and archives inside will be readable and writeable by this group.

Template: backup-manager/cron_d_remove_deprecated
Type: boolean
Default: false
_Description: Remove deprecated file /etc/cron.d/backup-manager?
 In previous version, backup-manager uses /etc/cron.d directory but this directory is not
 handled by anacron. Thus, it is not possible to run backup-manager's job asynchronously, if
 cron.d is used.
 .
 In order to let anacron handle backup-manager's job, the following CRON subdirectories are used:
 /etc/cron.daily, /etc/cron.weekly and /etc/cron.monthly, depending on the chosen frequency.
 .
 As jobs handled by the cron.d subdirectory may be skipped if the system is not running,
 it is recommended to use one of those directories instead.

Template: backup-manager/enable_encryption
Type: boolean
Default: false
_Description: Encrypt archives?
 If you don't trust the physical device where you store your data, you may want
 to be sure that your archives won't be accessible by a malicious user.
 .
 Backup Manager can encrypt your archives with GPG, that means that you will
 need a GPG identity to use that feature.

Template: backup-manager/encryption_recipient
Type: string
_Description: GPG recipient:
 You have to set the recipient for which the archive is encrypted. A valid
 specification is a short or long key id, or a descriptive name, as explained
 in the gpg man page.
 .
 The public key for this identity must be in the key ring of the user running gpg,
 which may be root in most of the cases.

