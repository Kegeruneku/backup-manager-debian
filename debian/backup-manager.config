#!/bin/sh  
set -e

. /usr/share/debconf/confmodule

# This is the basic question we have to ask : 
# how to make archives, where to store it..

db_input high backup-manager/backup-repository || true
db_input high backup-manager/repo_user || true
db_input high backup-manager/repo_group || true

db_input low backup-manager/filetype || true

# We have to manage deprecated /etc/cron.d/backup-manager
# Ask if user wants to remove the file
if [ -f /etc/cron.d/backup-manager ]; then
	db_input high backup-manager/cron_d_remove_deprecated || true
fi
	
# Look where their cronscript is.
if [ -f /etc/cron.daily/backup-manager ]; then
    db_set backup-manager/cron_frequency "daily"
elif [ -f /etc/cron.weekly/backup-manager ]; then
    db_set backup-manager/cron_frequency "weekly"
elif [ -f /etc/cron.monthly/backup-manager ]; then
    db_set backup-manager/cron_frequency "monthly"
else
    # They don't have one. If we're upgrading, this means they don't
    # want it.
    if [ -n "$2" ]; then
	db_set backup-manager/cron_frequency "none"
    fi
fi

db_input medium backup-manager/cron_frequency || true

db_go || true

# only the tar command can dereference symlinks.
if [ "$RET" != "zip" ]; then
	db_input low backup-manager/dump_symlinks || true
fi

db_input low backup-manager/name-format || true
db_input medium backup-manager/time-to-live || true
db_input high backup-manager/directories || true
db_input medium backup-manager/blacklist || true
db_go || true

# Encryption?
db_input medium backup-manager/enable_encryption || true
db_go || true

db_get backup-manager/enable_encryption || true
if [ $RET = true ]; then
    db_input medium backup-manager/encryption_recipient || true
    db_go || true
fi    

# Now, we have the extra-features:
# uploading system
db_input low backup-manager/want_to_upload || true
db_go || true

db_get backup-manager/want_to_upload 
if [ $RET = true ]; then

	db_input low backup-manager/transfert_mode || true
	db_go || true
	
	db_input low backup-manager/upload-hosts || true
	
	db_get backup-manager/transfert_mode || true
	if [ $RET = ftp ]; then
		db_input low backup-manager/upload-user-ftp || true
		db_input low backup-manager/upload-passwd || true
	else
		db_input low backup-manager/upload-user-scp || true
		db_go || true

		db_get backup-manager/upload-user-scp || true
		scp_user="$RET"
		
        db_input low backup-manager/upload-key || true
	fi
	
	db_input low backup-manager/upload-dir || true
fi
db_go || true


# burning system ?
db_input low backup-manager/burning-enabled || true
db_go || true

db_get backup-manager/burning-enabled || true
if [ "$RET" = "true" ]; then
	db_input low backup-manager/burning-device || true
	db_input low backup-manager/burning-method || true
	db_input low backup-manager/burning-maxsize || true
fi
db_go || true

